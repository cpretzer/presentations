apiVersion: v1
kind: Namespace
metadata:
  name: emojivoto
  annotations:
    config.linkerd.io/trace-collector: "oc-collector.tracing:55678"
    linkerd.io/inject: enabled
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress
  labels:
    app: nginx-ingress
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress
  labels:
    app: nginx-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress
subjects:
- kind: ServiceAccount
  name: default
  namespace: emojivoto
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: web-nginx
  namespace: emojivoto
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:80;
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: web-svc
          servicePort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-controller
  namespace: emojivoto
  labels:
    app: nginx-ingress  
data:
  ssl-redirect: "false"
  enable-opentracing: "true"
  enable-vts-status: "false"
  zipkin-collector-host: oc-collector.tracing
  zipkin-sample-rate: "0.5"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-ingress
  name: nginx-ingress
  namespace: emojivoto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --default-backend-service=
        - --ingress-class=nginx
        - --configmap=emojivoto/nginx-ingress-controller
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.22.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          procMount: Default
          runAsUser: 33
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: emojivoto
  labels:
    app: nginx-ingress
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: nginx-ingress
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: emoji
  namespace: emojivoto
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: voting
  namespace: emojivoto
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: web
  namespace: emojivoto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: emoji
  namespace: emojivoto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emoji-svc
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: emoji-svc
    spec:
      serviceAccountName: emoji
      containers:
      - env:
        - name: GRPC_PORT
          value: "8080"
        - name: OC_AGENT_HOST
          value: "oc-collector.tracing:55678"
        image: buoyantio/emojivoto-emoji-svc:v8
        name: emoji-svc
        ports:
        - containerPort: 8080
          name: grpc
        resources:
          requests:
            cpu: 100m
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: emoji-svc
  namespace: emojivoto
spec:
  selector:
    app: emoji-svc
  clusterIP: None
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: voting
  namespace: emojivoto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voting-svc
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: voting-svc
    spec:
      serviceAccountName: voting
      containers:
      - env:
        - name: GRPC_PORT
          value: "8080"
        - name: OC_AGENT_HOST
          value: "oc-collector.tracing:55678"
        image: buoyantio/emojivoto-voting-svc:v8
        name: voting-svc
        ports:
        - containerPort: 8080
          name: grpc
        resources:
          requests:
            cpu: 100m
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: voting-svc
  namespace: emojivoto
spec:
  selector:
    app: voting-svc
  clusterIP: None
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: web
  namespace: emojivoto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-svc
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web-svc
    spec:
      serviceAccountName: web
      containers:
      - env:
        - name: WEB_PORT
          value: "80"
        - name: OC_AGENT_HOST
          value: "oc-collector.tracing:55678"
        - name: EMOJISVC_HOST
          value: emoji-svc.emojivoto:8080
        - name: VOTINGSVC_HOST
          value: voting-svc.emojivoto:8080
        - name: INDEX_BUNDLE
          value: dist/index_bundle.js
        image: buoyantio/emojivoto-web:v8
        name: web-svc
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            cpu: 100m
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  namespace: emojivoto
spec:
  type: LoadBalancer
  selector:
    app: web-svc
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: vote-bot
  namespace: emojivoto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote-bot
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vote-bot
    spec:
      containers:
      - command:
        - emojivoto-vote-bot
        env:
        - name: WEB_HOST
          value: nginx-ingress.emojivoto:80
        image: buoyantio/emojivoto-web:v8
        name: vote-bot
        resources:
          requests:
            cpu: 10m
status: {}
---
